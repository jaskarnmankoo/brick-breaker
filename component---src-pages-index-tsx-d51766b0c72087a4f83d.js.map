{"version":3,"file":"component---src-pages-index-tsx-d51766b0c72087a4f83d.js","mappings":"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","sources":["webpack://brick-breaker/./src/assets/grape.webp","webpack://brick-breaker/./src/assets/mango.webp","webpack://brick-breaker/./src/assets/pineapple.webp","webpack://brick-breaker/./src/assets/strawberry.webp","webpack://brick-breaker/./src/pages/index.tsx","webpack://brick-breaker/./src/hooks/useDarkMode.tsx"],"sourcesContent":["export default __webpack_public_path__ + \"static/grape-59e16ef56f6b0d63fcf5f219dd5631af.webp\";","export default __webpack_public_path__ + \"static/mango-da75fec86811a51dbb606a33ed123331.webp\";","export default __webpack_public_path__ + \"static/pineapple-98d3c88bae8db1a291b025c892e48d5a.webp\";","export default __webpack_public_path__ + \"static/strawberry-85c6d5cf83473856d4161378140534ba.webp\";","import * as React from 'react';\n\nimport SearchEngineOptimization from '../components/common/SearchEngineOptimization';\n\nimport useDarkMode from '../hooks/useDarkMode';\n\nimport { getRandomInt } from '../utils';\n\nimport grapeImage from '../assets/grape.webp';\nimport mangoImage from '../assets/mango.webp';\nimport pineappleImage from '../assets/pineapple.webp';\nimport strawberryImage from '../assets/strawberry.webp';\n\ntype Bricks = { [coordinate: string]: number }[][];\n\n/** Returns the Brick Breaker game */\nexport default function Home(): JSX.Element {\n  const darkMode = useDarkMode(false);\n\n  const [difficulty, setDifficulty] = React.useState('');\n  const [start, setStart] = React.useState(false);\n  const [gameOver, setGameOver] = React.useState(false);\n  const [isMobile, setIsMobile] = React.useState(false);\n\n  const animationFrame = React.useRef(0);\n  const bonus = React.useRef(0);\n  const canvas = React.useRef<HTMLCanvasElement | null>(null);\n  const ctx = React.useRef<CanvasRenderingContext2D | null>(null);\n  const lives = React.useRef(3);\n  const score = React.useRef(0);\n\n  // Ball\n  const speedX = React.useRef(2);\n  const speedY = React.useRef(-2);\n  const x = React.useRef(0);\n  const y = React.useRef(0);\n\n  // Bricks\n  const bricks = React.useRef<Bricks>([]);\n  const brickRowCount = React.useRef(4);\n  const brickColumnCount = React.useRef(10);\n  const brickWidth = React.useRef(65);\n  const brickHeight = React.useRef(20);\n  const brickPadding = React.useRef(10);\n  const brickOffsetTop = React.useRef(50);\n  const brickOffsetLeft = React.useRef(30);\n\n  // Characters\n  const imageDropDuration = React.useRef(1000);\n  const imageUsed = React.useRef<HTMLImageElement | null>(null);\n  const imageX = React.useRef(0);\n  const imageY = React.useRef(0);\n  const imageYSpeed = React.useRef(-2);\n\n  // Paddle\n  const leftPressed = React.useRef(false);\n  const paddleSpeed = React.useRef(7);\n  const paddleX = React.useRef(0);\n  const paddleWidth = React.useRef(100);\n  const rightPressed = React.useRef(false);\n\n  const grape = React.useRef<HTMLImageElement | null>(null);\n  const mango = React.useRef<HTMLImageElement | null>(null);\n  const pineapple = React.useRef<HTMLImageElement | null>(null);\n  const strawberry = React.useRef<HTMLImageElement | null>(null);\n\n  React.useEffect(() => {\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    const mobile = urlParams.get('mobile');\n    setIsMobile(mobile === 'true');\n  }, []);\n\n  const setEasy = React.useCallback(() => setDifficulty('easy'), []);\n  const setMedium = React.useCallback(() => setDifficulty('medium'), []);\n  const setHard = React.useCallback(() => setDifficulty('hard'), []);\n\n  const keyDownHandler = React.useCallback((e: KeyboardEvent) => {\n    if (e.key == 'Right' || e.key == 'ArrowRight') {\n      rightPressed.current = true;\n    } else if (e.key == 'Left' || e.key == 'ArrowLeft') {\n      leftPressed.current = true;\n    }\n  }, []);\n\n  const keyUpHandler = React.useCallback((e: KeyboardEvent) => {\n    if (e.key == 'Right' || e.key == 'ArrowRight') {\n      rightPressed.current = false;\n    } else if (e.key == 'Left' || e.key == 'ArrowLeft') {\n      leftPressed.current = false;\n    }\n  }, []);\n\n  const mouseMoveHandler = React.useCallback((e: MouseEvent) => {\n    if (canvas.current) {\n      const relativeX = e.clientX - canvas.current.offsetLeft;\n      if (relativeX > 0 && relativeX < canvas.current.width) {\n        paddleX.current = relativeX - paddleWidth.current / 2;\n      }\n    }\n  }, []);\n\n  const touchScreenHandler = React.useCallback((e: TouchEvent) => {\n    if (e.touches) {\n      paddleX.current = e.touches[0].pageX - paddleWidth.current / 2;\n    }\n  }, []);\n\n  const removeEventListeners = React.useCallback(() => {\n    document.removeEventListener('keydown', keyDownHandler, false);\n    document.removeEventListener('keyup', keyUpHandler, false);\n    document.removeEventListener('mousemove', mouseMoveHandler, false);\n  }, [keyDownHandler, keyUpHandler, mouseMoveHandler]);\n\n  const removeMobileEventListeners = React.useCallback(() => {\n    document.removeEventListener('touchstart', touchScreenHandler, false);\n    document.removeEventListener('touchmove', touchScreenHandler, false);\n  }, [touchScreenHandler]);\n\n  const startGame = React.useCallback(() => {\n    bonus.current = 0;\n    score.current = 0;\n    lives.current = 3;\n    setGameOver(false);\n    setStart(true);\n\n    if (isMobile) {\n      document.addEventListener('touchstart', touchScreenHandler, false);\n      document.addEventListener('touchmove', touchScreenHandler, false);\n    } else {\n      document.addEventListener('keydown', keyDownHandler, false);\n      document.addEventListener('keyup', keyUpHandler, false);\n      document.addEventListener('mousemove', mouseMoveHandler, false);\n    }\n  }, [\n    isMobile,\n    keyDownHandler,\n    keyUpHandler,\n    mouseMoveHandler,\n    touchScreenHandler\n  ]);\n\n  const collisionDetection = React.useCallback(() => {\n    for (let c = 0; c < brickColumnCount.current; c++) {\n      for (let r = 0; r < brickRowCount.current; r++) {\n        const b = bricks.current[c][r];\n        if (b.status == 1) {\n          if (\n            x.current > b.x &&\n            x.current < b.x + brickWidth.current &&\n            y.current > b.y &&\n            y.current < b.y + brickHeight.current\n          ) {\n            speedY.current = -speedY.current;\n            b.status = 0;\n            score.current++;\n          }\n        }\n      }\n    }\n  }, []);\n\n  const imageCollisionDetection = React.useCallback(() => {\n    if (canvas.current) {\n      if (\n        imageX.current >= paddleX.current - paddleWidth.current / 2 + 20 &&\n        imageX.current <= paddleX.current + paddleWidth.current - 20 &&\n        imageY.current > canvas.current.height - 20 &&\n        imageY.current <= canvas.current.height\n      ) {\n        bonus.current += 1;\n      }\n    }\n  }, []);\n\n  const drawBall = React.useCallback(() => {\n    if (ctx.current) {\n      ctx.current.beginPath();\n      ctx.current.arc(x.current, y.current, 10, 0, Math.PI * 2);\n      ctx.current.fillStyle = darkMode ? '#fff' : '#000';\n      ctx.current.fill();\n      ctx.current.closePath();\n    }\n  }, [darkMode]);\n\n  const drawBonus = React.useCallback(() => {\n    if (canvas.current && ctx.current) {\n      ctx.current.font = '16px Rubik';\n      ctx.current.fillStyle = darkMode ? '#fff' : '#000';\n      ctx.current.fillText(\n        'Bonus: ' + bonus.current,\n        canvas.current.width / 2 - 25,\n        20\n      );\n    }\n  }, [darkMode]);\n\n  const drawBricks = React.useCallback(() => {\n    for (let c = 0; c < brickColumnCount.current; c++) {\n      for (let r = 0; r < brickRowCount.current; r++) {\n        if (bricks.current[c][r].status == 1) {\n          const brickX =\n            c * (brickWidth.current + brickPadding.current) +\n            brickOffsetLeft.current;\n          const brickY =\n            r * (brickHeight.current + brickPadding.current) +\n            brickOffsetTop.current;\n          bricks.current[c][r].x = brickX;\n          bricks.current[c][r].y = brickY;\n\n          if (ctx.current) {\n            ctx.current.beginPath();\n            ctx.current.rect(\n              brickX,\n              brickY,\n              brickWidth.current,\n              brickHeight.current\n            );\n            ctx.current.fillStyle = darkMode ? '#fff' : '#000';\n            ctx.current.fill();\n            ctx.current.closePath();\n          }\n        }\n      }\n    }\n  }, [darkMode]);\n\n  const drawImage = React.useCallback(() => {\n    const images = [\n      grape.current,\n      mango.current,\n      pineapple.current,\n      strawberry.current\n    ];\n\n    if (canvas.current) {\n      if (imageY.current > canvas.current.height + imageDropDuration.current) {\n        imageUsed.current = images[getRandomInt(4)];\n        imageY.current = getRandomInt(-60);\n        imageX.current = getRandomInt(canvas.current.width - 40);\n      }\n\n      if (imageUsed.current && ctx.current) {\n        ctx.current.drawImage(\n          imageUsed.current,\n          imageX.current,\n          imageY.current,\n          40,\n          60\n        );\n      }\n    }\n  }, []);\n\n  const drawLives = React.useCallback(() => {\n    if (canvas.current && ctx.current) {\n      ctx.current.font = '16px Rubik';\n      ctx.current.fillStyle = darkMode ? '#fff' : '#000';\n      ctx.current.fillText(\n        'Lives: ' + lives.current,\n        canvas.current.width - 65,\n        20\n      );\n    }\n  }, [darkMode]);\n\n  const drawPaddle = React.useCallback(() => {\n    if (canvas.current && ctx.current) {\n      ctx.current.beginPath();\n      ctx.current.rect(\n        paddleX.current,\n        canvas.current.height - 10,\n        paddleWidth.current,\n        10\n      );\n      ctx.current.fillStyle = darkMode ? '#fff' : '#000';\n      ctx.current.fill();\n      ctx.current.closePath();\n    }\n  }, [darkMode]);\n\n  const drawScore = React.useCallback(() => {\n    if (ctx.current) {\n      ctx.current.font = '16px Rubik';\n      ctx.current.fillStyle = darkMode ? '#fff' : '#000';\n      ctx.current.fillText('Score: ' + score.current, 8, 20);\n    }\n  }, [darkMode]);\n\n  const draw = React.useCallback(() => {\n    if (canvas.current && ctx.current) {\n      ctx.current.clearRect(0, 0, canvas.current.width, canvas.current.height);\n      drawBricks();\n      drawBall();\n      drawPaddle();\n      drawScore();\n      drawLives();\n      drawBonus();\n      collisionDetection();\n\n      drawImage();\n      imageCollisionDetection();\n\n      imageY.current -= imageYSpeed.current;\n\n      if (score.current === brickRowCount.current * brickColumnCount.current) {\n        if (isMobile) {\n          removeMobileEventListeners();\n        } else {\n          removeEventListeners();\n        }\n\n        cancelAnimationFrame(animationFrame.current);\n        setDifficulty('');\n        setGameOver(true);\n        setStart(false);\n\n        return;\n      }\n\n      if (\n        x.current + speedX.current > canvas.current.width - 10 ||\n        x.current + speedX.current < 10\n      )\n        speedX.current = -speedX.current;\n\n      if (y.current + speedY.current < 10) {\n        speedY.current = -speedY.current;\n      } else if (y.current + speedY.current > canvas.current.height - 10) {\n        if (\n          x.current > paddleX.current &&\n          x.current < paddleX.current + paddleWidth.current\n        ) {\n          if ((y.current = y.current - 10)) speedY.current = -speedY.current;\n        } else {\n          lives.current--;\n          if (!lives.current) {\n            if (isMobile) {\n              removeMobileEventListeners();\n            } else {\n              removeEventListeners();\n            }\n\n            cancelAnimationFrame(animationFrame.current);\n            setDifficulty('');\n            setGameOver(true);\n            setStart(false);\n\n            return;\n          } else {\n            x.current = canvas.current.width / 2;\n            y.current = canvas.current.height - 30;\n            paddleX.current = (canvas.current.width - paddleWidth.current) / 2;\n          }\n        }\n      }\n\n      if (\n        rightPressed.current &&\n        paddleX.current < canvas.current.width - paddleWidth.current\n      ) {\n        paddleX.current += paddleSpeed.current;\n      } else if (leftPressed.current && paddleX.current > 0) {\n        paddleX.current -= paddleSpeed.current;\n      }\n\n      x.current += speedX.current;\n      y.current += speedY.current;\n    }\n\n    animationFrame.current = requestAnimationFrame(draw);\n  }, [\n    collisionDetection,\n    drawBall,\n    drawBonus,\n    drawBricks,\n    drawImage,\n    drawLives,\n    drawPaddle,\n    drawScore,\n    imageCollisionDetection,\n    isMobile,\n    removeEventListeners,\n    removeMobileEventListeners\n  ]);\n\n  if (difficulty && start) {\n    if (canvas.current) {\n      ctx.current = canvas.current.getContext('2d');\n\n      if (ctx.current) {\n        x.current = canvas.current.width / 2;\n        y.current = canvas.current.height - 30;\n\n        paddleX.current = (canvas.current.width - paddleWidth.current) / 2;\n\n        if (difficulty === 'easy') {\n          speedX.current = 2;\n          speedY.current = -2;\n\n          imageDropDuration.current = 3000;\n\n          paddleSpeed.current = 7;\n          paddleWidth.current = 100;\n\n          brickRowCount.current = 4;\n          brickColumnCount.current = 10;\n          brickWidth.current = 65;\n          brickHeight.current = 20;\n          brickPadding.current = 10;\n          brickOffsetTop.current = 50;\n          brickOffsetLeft.current = 30;\n        }\n\n        if (difficulty === 'medium') {\n          speedX.current = 3;\n          speedY.current = -3;\n\n          imageDropDuration.current = 4000;\n\n          paddleSpeed.current = 10;\n          paddleWidth.current = 85;\n          paddleX.current = 10;\n\n          brickRowCount.current = 6;\n          brickColumnCount.current = 12;\n          brickWidth.current = 50;\n          brickHeight.current = 20;\n          brickPadding.current = 15;\n          brickOffsetTop.current = 50;\n          brickOffsetLeft.current = 20;\n        }\n\n        if (difficulty === 'hard') {\n          speedX.current = 4;\n          speedY.current = -4;\n\n          imageDropDuration.current = 6000;\n\n          paddleSpeed.current = 12;\n          paddleWidth.current = 75;\n\n          brickRowCount.current = 8;\n          brickColumnCount.current = 12;\n          brickWidth.current = 50;\n          brickHeight.current = 20;\n          brickPadding.current = 15;\n          brickOffsetTop.current = 50;\n          brickOffsetLeft.current = 20;\n        }\n\n        if (isMobile) {\n          brickColumnCount.current = 6;\n          brickWidth.current = 40;\n\n          if (difficulty === 'hard') {\n            brickRowCount.current = 6;\n          }\n        }\n\n        for (let c = 0; c < brickColumnCount.current; c++) {\n          bricks.current[c] = [];\n          for (let r = 0; r < brickRowCount.current; r++) {\n            bricks.current[c][r] = { x: 0, y: 0, status: 1 };\n          }\n        }\n\n        draw();\n      }\n    }\n  }\n\n  return (\n    <>\n      <SearchEngineOptimization title=\"Home\" difficulty={difficulty} />\n      <main className=\"grid grid-cols-1\">\n        {gameOver && (\n          <p className=\"text-xl text-center\">\n            Game over! Your score was: {score.current + bonus.current}\n          </p>\n        )}\n        {!difficulty ? (\n          <>\n            <p className=\"text-xl text-center\">Choose a difficulty level...</p>\n            <div className=\"grid grid-cols-3\">\n              <button type=\"button\" className=\"game-mode\" onClick={setEasy}>\n                Easy\n              </button>\n              <button type=\"button\" className=\"game-mode\" onClick={setMedium}>\n                Medium\n              </button>\n              <button type=\"button\" className=\"game-mode\" onClick={setHard}>\n                Hard\n              </button>\n            </div>\n          </>\n        ) : (\n          <>\n            {!start && (\n              <button\n                type=\"button\"\n                className=\"game-mode w-60 mx-auto\"\n                onClick={startGame}\n              >\n                Start Game\n              </button>\n            )}\n            <div className=\"grid grid-cols-4 justify-items-center\">\n              <img ref={grape} src={grapeImage} alt=\"\" width={40} height={65} />\n              <img ref={mango} src={mangoImage} alt=\"\" width={40} height={65} />\n              <img\n                ref={pineapple}\n                src={pineappleImage}\n                alt=\"\"\n                width={40}\n                height={65}\n              />\n              <img\n                ref={strawberry}\n                src={strawberryImage}\n                alt=\"\"\n                width={40}\n                height={65}\n              />\n            </div>\n            <div className=\"grid grid-cols-1 justify-items-center\">\n              <canvas\n                ref={canvas}\n                width={isMobile ? 360 : 800}\n                height={isMobile ? 400 : 600}\n              />\n            </div>\n          </>\n        )}\n      </main>\n    </>\n  );\n}\n","import * as React from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport default function useDarkMode(_darkMode: boolean): boolean {\n  const [isDarkMode, setIsDarkMode] = React.useState<boolean>(false);\n\n  const checkDarkMode = React.useCallback(\n    (event) => (event.matches ? setIsDarkMode(true) : setIsDarkMode(false)),\n    []\n  );\n\n  React.useEffect(() => {\n    if (\n      window.matchMedia &&\n      window.matchMedia('(prefers-color-scheme: dark)').matches\n    ) {\n      setIsDarkMode(true);\n    } else {\n      setIsDarkMode(false);\n    }\n\n    window\n      .matchMedia('(prefers-color-scheme: dark)')\n      .addEventListener('change', checkDarkMode);\n\n    return () => {\n      window\n        .matchMedia('(prefers-color-scheme: dark)')\n        .removeEventListener('change', checkDarkMode);\n    };\n  }, [checkDarkMode]);\n\n  return isDarkMode;\n}\n"],"names":["Home","darkMode","_darkMode","React","isDarkMode","setIsDarkMode","checkDarkMode","event","matches","window","matchMedia","addEventListener","removeEventListener","useDarkMode","difficulty","setDifficulty","start","setStart","gameOver","setGameOver","isMobile","setIsMobile","animationFrame","bonus","canvas","ctx","lives","score","speedX","speedY","x","y","bricks","brickRowCount","brickColumnCount","brickWidth","brickHeight","brickPadding","brickOffsetTop","brickOffsetLeft","imageDropDuration","imageUsed","imageX","imageY","imageYSpeed","leftPressed","paddleSpeed","paddleX","paddleWidth","rightPressed","grape","mango","pineapple","strawberry","queryString","location","search","mobile","URLSearchParams","get","setEasy","setMedium","setHard","keyDownHandler","e","key","current","keyUpHandler","mouseMoveHandler","relativeX","clientX","offsetLeft","width","touchScreenHandler","touches","pageX","removeEventListeners","document","removeMobileEventListeners","startGame","collisionDetection","c","r","b","status","imageCollisionDetection","height","drawBall","beginPath","arc","Math","PI","fillStyle","fill","closePath","drawBonus","font","fillText","drawBricks","brickX","brickY","rect","drawImage","images","getRandomInt","drawLives","drawPaddle","drawScore","draw","clearRect","cancelAnimationFrame","requestAnimationFrame","getContext","SearchEngineOptimization","title","className","type","onClick","ref","src","grapeImage","alt","mangoImage","pineappleImage","strawberryImage"],"sourceRoot":""}