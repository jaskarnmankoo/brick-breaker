{"version":3,"file":"component---src-pages-index-js-c2786ab85653d223557c.js","mappings":"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","sources":["webpack://brick-breaker/./src/assets/explosion.webp","webpack://brick-breaker/./src/assets/grape.webp","webpack://brick-breaker/./src/assets/mango.webp","webpack://brick-breaker/./src/assets/pineapple.webp","webpack://brick-breaker/./src/assets/strawberry.webp","webpack://brick-breaker/./src/pages/index.js","webpack://brick-breaker/./src/hooks/useDarkMode.tsx"],"sourcesContent":["export default __webpack_public_path__ + \"static/explosion-9983d062270ffef8737e52b20ff9f0ed.webp\";","export default __webpack_public_path__ + \"static/grape-59e16ef56f6b0d63fcf5f219dd5631af.webp\";","export default __webpack_public_path__ + \"static/mango-da75fec86811a51dbb606a33ed123331.webp\";","export default __webpack_public_path__ + \"static/pineapple-98d3c88bae8db1a291b025c892e48d5a.webp\";","export default __webpack_public_path__ + \"static/strawberry-85c6d5cf83473856d4161378140534ba.webp\";","import * as React from 'react';\n\nimport SearchEngineOptimization from '../components/SearchEngineOptimization';\n\nimport useDarkMode from '../hooks/useDarkMode';\n\nimport explosion from '../assets/explosion.webp';\nimport grape from '../assets/grape.webp';\nimport mango from '../assets/mango.webp';\nimport pineapple from '../assets/pineapple.webp';\nimport strawberry from '../assets/strawberry.webp';\n\nconst randomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nexport default function Home() {\n  const queryString = window.location.search;\n  const urlParams = new URLSearchParams(queryString);\n  const isMobile = urlParams.get('mobile');\n\n  const darkMode = useDarkMode(null);\n\n  const [doneGame, setDoneGame] = React.useState(false);\n  const [finalScore, setFinalScore] = React.useState(0);\n  const [gameMode, setGameMode] = React.useState('');\n\n  if (gameMode) {\n    let canvas = document.getElementById('game');\n    let ctx = canvas.getContext('2d');\n\n    const images = [\n      document.getElementById('grape'),\n      document.getElementById('mango'),\n      document.getElementById('pineapple'),\n      document.getElementById('strawberry')\n    ];\n    const explosion = document.getElementById('explosion');\n\n    let image = images[randomInt(0, 3)];\n    let bonusClaimed = false;\n\n    let imageX = randomInt(50, isMobile ? 330 : 750);\n    let imageY = -2000000;\n    let interval = 20000;\n    let collisionY = 580;\n    let collisionYEnd = 600;\n    let imageDY = -2;\n\n    let explodeX = 0;\n    let explodeY = -2000000;\n\n    if (isMobile) {\n      collisionY = 380;\n      collisionYEnd = 400;\n    }\n\n    if (gameMode === 'medium') {\n      interval = 15000;\n      imageDY -= 3;\n    }\n\n    if (gameMode === 'hard') {\n      interval = 10000;\n      imageDY -= 4;\n    }\n\n    setInterval(() => {\n      image = images[randomInt(0, 3)];\n      imageX = randomInt(50, isMobile ? 330 : 750);\n      imageY = 0;\n      bonusClaimed = false;\n    }, interval);\n\n    let ballRadius = 10;\n    let x = canvas.width / 2;\n    let y = canvas.height - 30;\n    let dx = 2;\n    let dy = -2;\n\n    let paddleHeight = 10;\n    let paddleWidth = 100;\n    let paddleX = (canvas.width - paddleWidth) / 2;\n    let rightPressed = false;\n    let leftPressed = false;\n\n    let brickRowCount = 4;\n    let brickColumnCount = 10;\n    let brickWidth = 65;\n    let brickHeight = 20;\n    let brickPadding = 10;\n    let brickOffsetTop = 50;\n    let brickOffsetLeft = 30;\n\n    if (gameMode === 'medium') {\n      paddleWidth = 80;\n\n      brickRowCount = 6;\n      brickColumnCount = 12;\n      brickWidth = 50;\n      brickHeight = 20;\n      brickPadding = 15;\n      brickOffsetTop = 50;\n      brickOffsetLeft = 20;\n    }\n\n    if (gameMode === 'hard') {\n      paddleWidth = 60;\n\n      brickRowCount = 8;\n      brickColumnCount = 12;\n      brickWidth = 50;\n      brickHeight = 20;\n      brickPadding = 15;\n      brickOffsetTop = 50;\n      brickOffsetLeft = 20;\n    }\n\n    let bonus = 0;\n    let score = 0;\n    let lives = 3;\n\n    if (isMobile) {\n      brickColumnCount = 6;\n      brickWidth = 40;\n\n      if (gameMode === 'hard') {\n        brickRowCount = 6;\n      }\n    }\n\n    let bricks = [];\n    let difference = 0;\n    for (let c = 0; c < brickColumnCount; c++) {\n      bricks[c] = [];\n      for (let r = 0; r < brickRowCount; r++) {\n        if (gameMode === 'hard') {\n          if (c === 0) {\n            if (r === 1 || r === 2 || r === 3 || r === 4) {\n              bricks[c][r] = { x: 0, y: 0, status: 0 };\n              difference++;\n            } else {\n              bricks[c][r] = { x: 0, y: 0, status: 1 };\n            }\n          } else if (c === 3) {\n            if (r === 0 || r === 5) {\n              bricks[c][r] = { x: 0, y: 0, status: 0 };\n              difference++;\n            } else {\n              bricks[c][r] = { x: 0, y: 0, status: 1 };\n            }\n          } else if (c === 4) {\n            if (r === 1 || r === 4) {\n              bricks[c][r] = { x: 0, y: 0, status: 0 };\n              difference++;\n            } else {\n              bricks[c][r] = { x: 0, y: 0, status: 1 };\n            }\n          } else if (c === 5) {\n            if (r === 2 || r === 3) {\n              bricks[c][r] = { x: 0, y: 0, status: 0 };\n              difference++;\n            } else {\n              bricks[c][r] = { x: 0, y: 0, status: 1 };\n            }\n          } else if (c === 6) {\n            if (r === 3 || r === 2) {\n              bricks[c][r] = { x: 0, y: 0, status: 0 };\n              difference++;\n            } else {\n              bricks[c][r] = { x: 0, y: 0, status: 1 };\n            }\n          } else if (c === 7) {\n            if (r === 4 || r === 1) {\n              bricks[c][r] = { x: 0, y: 0, status: 0 };\n              difference++;\n            } else {\n              bricks[c][r] = { x: 0, y: 0, status: 1 };\n            }\n          } else if (c === 8) {\n            if (r === 5 || r === 0) {\n              bricks[c][r] = { x: 0, y: 0, status: 0 };\n              difference++;\n            } else {\n              bricks[c][r] = { x: 0, y: 0, status: 1 };\n            }\n          } else if (c === 11) {\n            if (r === 1 || r === 2 || r === 3 || r === 4) {\n              bricks[c][r] = { x: 0, y: 0, status: 0 };\n              difference++;\n            } else {\n              bricks[c][r] = { x: 0, y: 0, status: 1 };\n            }\n          } else {\n            bricks[c][r] = { x: 0, y: 0, status: 1 };\n          }\n        } else {\n          bricks[c][r] = { x: 0, y: 0, status: 1 };\n        }\n      }\n    }\n\n    const keyDownHandler = (e) => {\n      if (e.key === 'Right' || e.key === 'ArrowRight') {\n        rightPressed = true;\n      } else if (e.key === 'Left' || e.key === 'ArrowLeft') {\n        leftPressed = true;\n      }\n    };\n\n    const keyUpHandler = (e) => {\n      if (e.key === 'Right' || e.key === 'ArrowRight') {\n        rightPressed = false;\n      } else if (e.key === 'Left' || e.key === 'ArrowLeft') {\n        leftPressed = false;\n      }\n    };\n\n    const mouseMoveHandler = (e) => {\n      let relativeX = e.clientX - canvas.offsetLeft;\n      if (relativeX > 0 && relativeX < canvas.width) {\n        paddleX = relativeX - paddleWidth / 4;\n      }\n    };\n\n    const touchHandler = (e) => {\n      if (e.touches) {\n        paddleX = e.touches[0].pageX - paddleWidth / 2;\n      }\n    };\n\n    if (!isMobile) {\n      document.addEventListener('keydown', keyDownHandler, false);\n      document.addEventListener('keyup', keyUpHandler, false);\n      canvas.addEventListener('mousemove', mouseMoveHandler, false);\n    } else {\n      document.addEventListener('touchStart', touchHandler, false);\n      document.addEventListener('touchmove', touchHandler, false);\n    }\n\n    const collisionDetection = () => {\n      for (let c = 0; c < brickColumnCount; c++) {\n        for (let r = 0; r < brickRowCount; r++) {\n          let b = bricks[c][r];\n          if (b.status === 1) {\n            if (\n              x > b.x &&\n              x < b.x + brickWidth &&\n              y > b.y &&\n              y < b.y + brickHeight\n            ) {\n              dy = -dy;\n              b.status = 0;\n              score++;\n            }\n          }\n        }\n      }\n    };\n\n    const drawBall = () => {\n      ctx.beginPath();\n      ctx.arc(x, y, ballRadius, 0, Math.PI * 2);\n      ctx.fillStyle = darkMode ? '#fff' : '#000';\n      ctx.fill();\n      ctx.closePath();\n    };\n\n    const drawPaddle = () => {\n      ctx.beginPath();\n      ctx.rect(\n        paddleX,\n        canvas.height - paddleHeight,\n        paddleWidth,\n        paddleHeight\n      );\n      ctx.fillStyle = darkMode ? '#fff' : '#000';\n      ctx.fill();\n      ctx.closePath();\n    };\n\n    const drawBricks = () => {\n      for (let c = 0; c < brickColumnCount; c++) {\n        for (let r = 0; r < brickRowCount; r++) {\n          if (bricks[c][r].status === 1) {\n            let brickX = c * (brickWidth + brickPadding) + brickOffsetLeft;\n            let brickY = r * (brickHeight + brickPadding) + brickOffsetTop;\n            bricks[c][r].x = brickX;\n            bricks[c][r].y = brickY;\n            ctx.beginPath();\n            ctx.rect(brickX, brickY, brickWidth, brickHeight);\n            ctx.fillStyle = darkMode ? '#fff' : '#000';\n            ctx.fill();\n            ctx.closePath();\n          }\n        }\n      }\n    };\n\n    const drawBonus = () => {\n      let center = 450;\n\n      if (isMobile) {\n        center = 230;\n      }\n\n      ctx.font = '20px Rubik';\n      ctx.fillStyle = darkMode ? '#fff' : '#000';\n      ctx.fillText('Bonus: ' + bonus, canvas.width - center, 20);\n    };\n\n    const drawScore = () => {\n      ctx.font = '20px Rubik';\n      ctx.fillStyle = darkMode ? '#fff' : '#000';\n      ctx.fillText('Score: ' + score, 8, 20);\n    };\n\n    const drawLives = () => {\n      ctx.font = '20px Rubik';\n      ctx.fillStyle = darkMode ? '#fff' : '#000';\n      ctx.fillText('Lives: ' + lives, canvas.width - 75, 20);\n    };\n\n    const drawImage = (xI, yI) => {\n      ctx.drawImage(image, xI, yI, 40, 60);\n    };\n\n    const draw = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      drawBricks();\n      drawBall();\n      drawPaddle();\n      drawScore();\n      drawLives();\n      drawBonus();\n\n      collisionDetection();\n\n      drawImage(imageX, imageY);\n      imageY -= imageDY;\n\n      ctx.drawImage(explosion, explodeX, explodeY, 70, 60);\n\n      explodeY += 1;\n\n      if (\n        imageX > paddleX &&\n        imageX < paddleX + paddleWidth &&\n        imageY >= collisionY &&\n        imageY <= collisionYEnd &&\n        !bonusClaimed\n      ) {\n        bonus += 10;\n        bonusClaimed = true;\n      }\n\n      if (x + dx > canvas.width - ballRadius || x + dx < ballRadius) {\n        dx = -dx;\n      }\n      if (y + dy < ballRadius) {\n        dy = -dy;\n      } else if (y + dy > canvas.height - ballRadius) {\n        if (x > paddleX && x < paddleX + paddleWidth) {\n          dy = -dy;\n        } else {\n          lives--;\n          if (!lives) {\n            setGameMode('');\n            setDoneGame(true);\n            cancelAnimationFrame(draw);\n            setFinalScore(score + bonus);\n            return null;\n          } else {\n            explodeX = x;\n            explodeY = y - 45;\n            x = canvas.width / 2;\n            y = canvas.height - 30;\n            dx = 2;\n            dy = -2;\n            paddleX = (canvas.width - paddleWidth) / 2;\n          }\n        }\n      }\n\n      if (rightPressed && paddleX < canvas.width - paddleWidth) {\n        if (gameMode === 'easy') {\n          paddleX += 7;\n        } else if (gameMode === 'medium') {\n          paddleX += 10;\n        } else {\n          paddleX += 14;\n        }\n\n        if (paddleX + paddleWidth > canvas.width) {\n          paddleX = canvas.width - paddleWidth;\n        }\n      } else if (leftPressed && paddleX > 0) {\n        if (gameMode === 'easy') {\n          paddleX -= 7;\n        } else if (gameMode === 'medium') {\n          paddleX -= 10;\n        } else {\n          paddleX -= 14;\n        }\n\n        if (paddleX < 0) {\n          paddleX = 0;\n        }\n      }\n\n      if (gameMode === 'easy') {\n        x += dx;\n        y += dy;\n      } else if (gameMode === 'medium') {\n        x += dx * 2;\n        y += dy * 2;\n      } else {\n        x += dx * 3;\n        y += dy * 3;\n      }\n\n      if (lives === 0 || lives === -1) {\n        setGameMode('');\n        setDoneGame(true);\n        cancelAnimationFrame(draw);\n        setFinalScore(score + bonus);\n        return null;\n      }\n\n      if (score === brickRowCount * brickColumnCount) {\n        setGameMode('');\n        setDoneGame(true);\n        cancelAnimationFrame(draw);\n        setFinalScore(score + bonus);\n        return null;\n      } else {\n        if (gameMode === 'hard') {\n          if (score === brickRowCount * brickColumnCount - difference) {\n            setGameMode('');\n            setDoneGame(true);\n            cancelAnimationFrame(draw);\n            setFinalScore(score + bonus);\n            return null;\n          }\n        }\n      }\n\n      requestAnimationFrame(draw);\n    };\n\n    draw();\n  }\n\n  const gameModeHandler = (mode) => {\n    setDoneGame(false);\n    setFinalScore(0);\n    setGameMode(mode);\n  };\n\n  return (\n    <>\n      <SearchEngineOptimization title=\"Home\" gameMode={gameMode} />\n      <main className=\"grid grid-cols-1\">\n        <div className=\"grid grid-cols-5 justify-items-center\">\n          <img id=\"grape\" src={grape} alt=\"\" width={40} height={65} />\n          <img id=\"mango\" src={mango} alt=\"\" width={40} height={65} />\n          <img id=\"pineapple\" src={pineapple} alt=\"\" width={40} height={65} />\n          <img id=\"strawberry\" src={strawberry} alt=\"\" width={40} height={65} />\n          <img id=\"explosion\" src={explosion} alt=\"\" width={40} height={80} />\n        </div>\n        {doneGame && (\n          <p className=\"text-xl text-center\">\n            Game over! Your score was: {finalScore}\n          </p>\n        )}\n        {!gameMode && (\n          <div className=\"grid grid-cols-3\">\n            <button\n              className=\"game-mode\"\n              onClick={() => gameModeHandler('easy')}\n            >\n              Easy\n            </button>\n            <button\n              className=\"game-mode\"\n              onClick={() => gameModeHandler('medium')}\n            >\n              Medium\n            </button>\n            <button\n              className=\"game-mode\"\n              onClick={() => gameModeHandler('hard')}\n            >\n              Hard\n            </button>\n          </div>\n        )}\n        <div className=\"grid grid-cols-1 justify-items-center\">\n          <canvas\n            id=\"game\"\n            width={isMobile ? 360 : 800}\n            height={isMobile ? 400 : 600}\n          />\n        </div>\n      </main>\n    </>\n  );\n}\n","import * as React from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport default function useDarkMode(_darkMode: null): boolean {\n  const [isDarkMode, setIsDarkMode] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    if (\n      window.matchMedia &&\n      window.matchMedia('(prefers-color-scheme: dark)').matches\n    ) {\n      setIsDarkMode(true);\n    } else {\n      setIsDarkMode(false);\n    }\n\n    const switchMode = (event: MediaQueryListEvent) => {\n      setIsDarkMode(event.matches ? true : false);\n    };\n\n    window\n      .matchMedia('(prefers-color-scheme: dark)')\n      .addEventListener('change', switchMode);\n\n    return () => {\n      window\n        .matchMedia('(prefers-color-scheme: dark)')\n        .removeEventListener('change', switchMode);\n    };\n  }, []);\n\n  return isDarkMode;\n}\n"],"names":["randomInt","min","max","Math","ceil","floor","random","Home","queryString","window","location","search","isMobile","URLSearchParams","get","darkMode","_darkMode","React","isDarkMode","setIsDarkMode","matchMedia","matches","switchMode","event","addEventListener","removeEventListener","useDarkMode","doneGame","setDoneGame","finalScore","setFinalScore","gameMode","setGameMode","canvas","document","getElementById","ctx","getContext","images","explosion","image","bonusClaimed","imageX","imageY","interval","collisionY","collisionYEnd","imageDY","explodeX","explodeY","setInterval","x","width","y","height","dx","dy","paddleWidth","paddleX","rightPressed","leftPressed","brickRowCount","brickColumnCount","brickWidth","brickHeight","brickPadding","brickOffsetTop","brickOffsetLeft","bonus","score","lives","bricks","difference","c","r","status","touchHandler","e","touches","pageX","key","relativeX","clientX","offsetLeft","draw","center","xI","yI","clearRect","brickX","brickY","beginPath","rect","fillStyle","fill","closePath","drawBricks","arc","PI","font","fillText","b","collisionDetection","drawImage","cancelAnimationFrame","requestAnimationFrame","gameModeHandler","mode","SearchEngineOptimization","title","className","id","src","grape","alt","mango","pineapple","strawberry","onClick"],"sourceRoot":""}